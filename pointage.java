/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ihm;

import controleur.pointageContr;
import entite.Employer;
import entite.EmployerPointer;
import entite.pointer;
import java.awt.Color;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.management.Query.times;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.MatteBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACH
 */
public class pointage extends javax.swing.JFrame {
pointageContr pointage = new pointageContr();
    /**
     * Creates new form pointage
     */
    public pointage() {
        initComponents();
        this.setLocationRelativeTo(null);
        MatteBorder borderPanel =BorderFactory.createMatteBorder(3, 3, 3, 3, Color.black);
        pan.setBorder(borderPanel);
         pan2.setBorder(borderPanel);
         MatteBorder borderTextef =BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
         time();
         date();
    }
   // Méthode pour afficher l'heure actuelle formatée
    public void time() {
        DateTimeFormatter times = DateTimeFormatter.ofPattern("hh : mm ");
        LocalDateTime now = LocalDateTime.now();
        time.setText(times.format(now));
    }

    // Méthode pour afficher la date actuelle formatée
    public void date() {
        DateTimeFormatter dates = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now = LocalDateTime.now();
        date.setText(dates.format(now));
    }
private void afficherList() throws SQLException {
    // Appel de la méthode liste() du contrôleur pour obtenir la liste des employés depuis la base de données
    List<Employer> employes = pointage.liste();
    // Obtenir le modèle de tableau par défaut associé à tableEmp
    DefaultTableModel model = (DefaultTableModel) tableEmp.getModel();
    // Réinitialiser le nombre de lignes du modèle à zéro
    model.setRowCount(0);
    // Parcourir la liste des employés et ajouter chaque employé au modèle du tableau
    for (Employer employe : employes) {
        model.addRow(new Object[]{
            employe.getNom(),
            employe.getPrenom(),
            employe.getCarteId(),
            employe.getFonction(),
            employe.getDateNaissance(),
            employe.getNumeroTel(),
            employe.getSexe()
        });
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pan = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEmp = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        m = new javax.swing.JRadioButton();
        F = new javax.swing.JRadioButton();
        time = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pan2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        point = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pan.setBackground(new java.awt.Color(0, 102, 102));
        pan.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pointage ");
        pan.add(jLabel1);
        jLabel1.setBounds(330, 10, 150, 40);

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\ACH\\Desktop\\acceuil2.jpg")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        pan.add(jButton2);
        jButton2.setBounds(20, 0, 70, 60);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("selectioner un empolyer  :");

        tableEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "nom", "prenom", "carte ID", "fonction", "dateNaissece", "numero de tele", "sexe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEmp.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tableEmpAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tableEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEmpMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEmp);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("entrer les information de pointage :");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(320, 10, 270, 20);

        jLabel4.setText("time :");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(180, 110, 70, 16);

        jButton3.setBackground(new java.awt.Color(0, 153, 51));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("valider");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(340, 137, 300, 40);

        m.setText("abscence");
        jPanel2.add(m);
        m.setBounds(540, 90, 90, 21);

        F.setText("present");
        jPanel2.add(F);
        F.setBounds(680, 90, 80, 21);

        time.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        time.setText("Time");
        jPanel2.add(time);
        time.setBounds(250, 110, 140, 20);

        jLabel7.setText("date :");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(180, 80, 50, 16);

        date.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        date.setText("Date");
        jPanel2.add(date);
        date.setBounds(250, 80, 140, 20);

        id.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        id.setForeground(new java.awt.Color(0, 153, 0));
        id.setText("Carte id");
        jPanel2.add(id);
        id.setBounds(220, 40, 80, 16);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("tableau de pointages :");

        jLabel6.setBackground(new java.awt.Color(255, 51, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setText("selctionner pour supprimer ");

        pan2.setBackground(new java.awt.Color(0, 102, 102));

        point.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "nom", "prenom", "carte id", "fonction", "dateNaissence", "tele", "sexe", "etat", "date", "time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        point.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                pointAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        point.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pointMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(point);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addComponent(pan2, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(pan2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableEmpAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tableEmpAncestorAdded
    try {
        // TODO add your handling code here:
        afficherList();
    } catch (SQLException ex) {
        Logger.getLogger(pointage.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_tableEmpAncestorAdded

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    // TODO add your handling code here:
    String idText = id.getText();
    // Obtenir la date et l'heure actuelles
    LocalDateTime now = LocalDateTime.now();
    java.sql.Date date = java.sql.Date.valueOf(now.toLocalDate());
    java.sql.Time time = java.sql.Time.valueOf(now.toLocalTime());
    String etat = "absent";
    if (F.isSelected()) {
        etat = "present";
    }
    pointer p = new pointer( idText,  etat,  date,  time);
    if (pointage.ajouter(p)) {
        JOptionPane.showMessageDialog(null, "Ajout avec succès", "pointage", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(null, "Erreur lors de l'ajout", "pointage", JOptionPane.ERROR_MESSAGE);
    }
    afficherListeEmployerPointer();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tableEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEmpMouseClicked
        // TODO add your handling code here:
     int selectedRowIndex = tableEmp.getSelectedRow();
    
    // Vérifier si une ligne est sélectionnée
    if (selectedRowIndex >= 0) {
        // Convertir l'index de la vue en index du modèle
        int selectedRowModelIndex = tableEmp.convertRowIndexToModel(selectedRowIndex);
        
        try {
            // Récupérer l'employé sélectionné à partir de la liste des employés
            Employer employerSelectionne = pointage.liste().get(selectedRowModelIndex);
            // Afficher le carteId dans le JLabel appelé id
            id.setText(employerSelectionne.getCarteId());
        } catch (SQLException e) {
            // Gérer toute exception SQL ici, par exemple l'afficher ou la journaliser
            System.err.println("Erreur lors de la récupération de l'employé sélectionné : " + e.getMessage());
        }
    }
    }//GEN-LAST:event_tableEmpMouseClicked

    private void pointAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_pointAncestorAdded
        // TODO add your handling code here:
    afficherListeEmployerPointer();
    }//GEN-LAST:event_pointAncestorAdded

    private void pointMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pointMouseClicked
        // TODO add your handling code here:
                // TODO add your handling code here:
  // Récupérer l'index de la ligne sélectionnée
int selectedRowIndex = point.getSelectedRow();

// Vérifier si une ligne est sélectionnée
if (selectedRowIndex >= 0) {
    // Convertir l'index de la vue en index du modèle
    int selectedRowModelIndex = point.convertRowIndexToModel(selectedRowIndex);
    
    try {
        // Récupérer l'employé sélectionné à partir de la liste des employés
        Employer employerSelectionne = pointage.liste().get(selectedRowModelIndex);
        
        // Afficher le carteId dans le JLabel appelé id
        id.setText(employerSelectionne.getCarteId());
        
        // Afficher un message de confirmation de suppression
        int response = JOptionPane.showConfirmDialog(
            null,
            "Voulez-vous vraiment supprimer cet employé ?",
            "Confirmation de suppression",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );
        
        // Si l'utilisateur clique sur "Oui"
        if (response == JOptionPane.YES_OPTION) {
            // Appeler la méthode de suppression du contrôleur
            boolean isDeleted = pointage.supprimer(employerSelectionne.getCarteId());
            if (isDeleted) {
                // Afficher un message de succès
                JOptionPane.showMessageDialog(null, "Employé supprimé avec succès", "Succès", JOptionPane.INFORMATION_MESSAGE);
                // Mettre à jour l'affichage de la liste des employés
                afficherListeEmployerPointer();
            } else {
                // Afficher un message d'erreur
                JOptionPane.showMessageDialog(null, "Erreur lors de la suppression de l'employé", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    } catch (SQLException e) {
        // Gérer toute exception SQL ici, par exemple l'afficher ou la journaliser
        System.err.println("Erreur lors de la récupération de l'employé sélectionné : " + e.getMessage());
    }
}

    }//GEN-LAST:event_pointMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
                Accueil a = new Accueil();
        a.setVisible(true);
        a.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
 private void afficherListeEmployerPointer() {
        List<EmployerPointer> employes = null;
        try {
            employes = pointage.getEmployerPointerList();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erreur lors de la récupération des employés pointer", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtenir le modèle de tableau par défaut associé à tableEmp
        DefaultTableModel model = (DefaultTableModel) point.getModel();
        // Réinitialiser le nombre de lignes du modèle à zéro
        model.setRowCount(0);
        
        // Parcourir la liste des employés et ajouter chaque employé au modèle du tableau
        for (EmployerPointer employe : employes) {
            model.addRow(new Object[]{
                employe.getNom(),
                employe.getPrenom(),
                employe.getCarteId(),
                employe.getFonction(),
                employe.getDateNaissance(),
                employe.getNumeroTel(),
                employe.getSexe(),
                employe.getEtat(),
                employe.getDate(),
                employe.getTime()
            });
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pointage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pointage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pointage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pointage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pointage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton F;
    private javax.swing.JLabel date;
    private javax.swing.JLabel id;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton m;
    private javax.swing.JPanel pan;
    private javax.swing.JPanel pan2;
    private javax.swing.JTable point;
    private javax.swing.JTable tableEmp;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables
}
